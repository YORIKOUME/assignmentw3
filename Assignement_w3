## setting a matrix 'x' and getting its inverse


makeCacheMatrix <- function(x = matrix()) {
  inv <- NULL
  set <- function(y) {
    x <<- y
    inv <<- NULL
  }
  ##gets and returns the matrix
  get<- function() x 
  
  setInverse <- function() inv 
  getInverse <- function() inv
  list(set = set,
       get = get,
       setInverse = setInverse,
       getInverse = getInverse)
}




## Return a matrix that is the inverse of 'x'
cacheSolve <- function(x, ...) {
  
 inv <- x$getInverse()
  if (!is.null(inv)) {
    
    return(inv)
  }
 ## get matrix 
 mat <- x$get()
 ## get the inverse of matrix created above
  inv <- solve(mat, ...)
  x$setInverse(inv)
  inv
}
